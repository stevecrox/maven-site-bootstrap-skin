name: Release Maven project

on:
  create:
    branches:
      - release/*
  workflow_dispatch:
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Source Code
        uses: actions/checkout@v2.5.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17

      - name: Configure GPG key settings
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_config_global: true
          git_committer_name: "stevecrox"
          git_committer_email: "stevecrox@hotmail.com"
          git_commit_gpgsign: true
          git_push_gpgsign: false
          git_tag_gpgsign: true

      - name: Extract branch name
        id: extract_branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / - | sed 's/release-*//')" >> $GITHUB_ENV

      - name: Prepare Release with Maven
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: mvn --batch-mode --settings .github/maven_settings.xml release:prepare -DreleaseVersion=${{ env.BRANCH_NAME }} -Dskin.version=${{ env.BRANCH_NAME }} -Dgoals=clean,deploy,site,site:stage,scm-publish:publish-scm
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

      - name: Release with Maven
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: mvn --batch-mode --settings .github/maven_settings.xml release:perform -DreleaseVersion=${{ env.BRANCH_NAME }} -Dskin.version=${{ env.BRANCH_NAME }} -Dgoals=clean,jacoco:prepare-agent,deploy,jacoco:report,spotbugs:spotbugs,pmd:pmd,pmd:cpd,site,site:stage,scm-publish:publish-scm
        env:
          GITHUB_USER: ${{ secrets.SCM_USER }}
          GITHUB_TOKEN: ${{ secrets.SCM_TOKEN }}
          GPG_KEY_ID: ${{ secrets.GPG_PRIVATE_KEYNAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          OSSRH_USER: ${{ secrets.OSSRH_USER }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

      - name: Fetch all Branches
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git fetch --all

      - name: Switch to main branch
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git checkout main

      - name: Merge release banch into main
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git merge origin/release/${{ env.BRANCH_NAME }}

      - name: Push from local into remote
        if: ${{ contains(github.ref, 'refs/heads/release') }}
        run: git push origin main

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "v${{ env.BRANCH_NAME }}"
          path: "**/target/*${{ env.BRANCH_NAME }}*"
