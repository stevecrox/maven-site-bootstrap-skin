## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##

########################################################################################################################
##
########################################################################################################################
#macro ( navBrandBar $navbarOrientation )
  <nav class="navbar navbar-expand-sm $navBarStyle">
    #if ( $navbarOrientation == 'Center' || $navbarOrientation === 'Centre')
      <div id="NavBrandBar.Container" class="container-fluid justify-content-center">
    #else
      <div id="NavBrandBar.Container" class="container-fluid">
    #end
    
    #navBrand()
    #navBrandBarCollapse($navbarOrientation)

  </nav>
#end

########################################################################################################################
##
########################################################################################################################
#macro ( navBrandBarCollapse $navbarOrientation $navbarOrientationLeft )
  <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#NavBrandBar.Collapse.Container" aria-controls="NavBrandBar.Collapse.Container" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  ## Sets the alignment of buttons in the navbar
  #if ( $navbarOrientation == $navbarOrientationLeft )
    #set ( $navbarCollapseClass = "justify-content-start navbar-collapse collapse" )
  #else
    #if ( $navbarOrientation == "center" )
      #set ( $navbarCollapseClass = "navbar-collapse collapse flex-grow-1" )
    #else
      #set ( $navbarCollapseClass = "justify-content-end navbar-collapse collapse" )
    #end
  #end

  ## Get the size for the SCM Icon, based on the size of the branding itself.
  #set ( $height = $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.height', '32px' ) )
  #set ( $width = $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.width', '32px' ) )

  ## Builds the collapse component as it exists on the navBrandBar
  <div id="NavBrandBar.Collapse.Container" class="${navbarCollapseClass}">
    <div class="d-flex navbar-nav">
      #if ( $decoration.getCustomValue( 'bootstrapSkin.gitHub.organisation' ) && $decoration.getCustomValue( 'bootstrapSkin.gitHub.repository' ) )
        #set ( $githubProject = $decoration.getCustomValue( 'bootstrapSkin.gitHub.organisation' ) )
        #set ( $githubRepository = $decoration.getCustomValue( 'bootstrapSkin.gitHub.repository' ) )
        <a id="NavBrandBar.Link.scm" class="nav-link" href="https://github.com/${githubProject}/${githubRepository}" data-rr-ui-event-key="https://github.com/${githubProject}/${githubRepository}" >
          #gitHubSVG( $width $height )
        </a>
      #end

      #if ( $decoration.getCustomValue( 'bootstrapSkin.gitlab.project' ) && $decoration.getCustomValue( 'bootstrapSkin.gitlab.repository' ) )
        #set ( $gitlabProject = $decoration.getCustomValue( 'bootstrapSkin.gitlab.project' ) )
        #set ( $gitlabRepository = $decoration.getCustomValue( 'bootstrapSkin.gitlab.repository' ) )
        <a id="NavBrandBar.Link.scm" class="nav-link" href="https://gitlab.com/${gitlabProject}/${gitlabRepository}" data-rr-ui-event-key="https://github.com/${gitlabProject}/${gitlabRepository}" >
          #gitLabSVG( $width $height )
        </a>
      #end

      #if ( $decoration.getCustomValue( 'bootstrapSkin.git.project' ) && $decoration.getCustomValue( 'bootstrapSkin.git.repository') && $decoration.getCustomValue( 'bootstrapSkin.git.endpoint') )
        #set ( $gitProject = $decoration.getCustomValue( 'bootstrapSkin.git.project' ) )
        #set ( $gitRepository = $decoration.getCustomValue( 'bootstrapSkin.git.repository' ) )
        #set ( $gitEndpoint = $decoration.getCustomValue( 'bootstrapSkin.git.repository' ) )
        <a id="NavBrandBar.Link.scm" class="nav-link" href="${gitEndpoint}/${gitProject}/${gitRepository}" data-rr-ui-event-key="${gitEndpoint}/${gitProject}/${gitRepository}" >
          #gitSVG( $width $height )
        </a>
      #end

      #if( $decoration.body && $decoration.body.menus )
        <ul id="NavBrandBar.Menu.List" class="navbar-nav">
          #topMenu( $decoration.body.menus $navbarOrientation 'navbar_collapse_menu' )
        </ul>
      #end
    </div>
  </div>
#end


########################################################################################################################
##
########################################################################################################################
#macro ( navBrand )
  ## Only add a brand image if a location is supplied
  #set ( $banner = $decoration.getCustomChild( 'bootstrapSkin.navbar.icon' ) )

  #if ( $convert.toBoolean( $decoration.getCustomValue( 'bootstrapSkin.navbar.brand.enabled', 'true' ) ) )
    #set ( $brandText = $decoration.getCustomValue( 'bootstrapSkin.navbar.brand.text', $project.name ) )
  #else
    #set ( $brandText = '' )
  #end

  #banner ( "NavBrandBar.Brand"
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.name', 'Navbar Brand Icon' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.title', 'Navbar Brand Icon' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.href', '#' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.src' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.alt', 'Navbar Brand Icon' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.border' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.height', '32px' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.width', '32px' )
             $decoration.getCustomValue( 'bootstrapSkin.navbar.icon.style', 'text-light active navbar-brand' )
             $brandText)
#end

########################################################################################################################
##
########################################################################################################################
#macro ( topMenu $menus $navbarOrientation $navbarLinkCSS )
  ## Use the
  #if ( $navbarOrientation == 'left' )
    #set ( $subMenuClass = 'class="dropdown-menu submenu submenu-left"' )
  #else
    #set ( $subMenuClass = 'class="dropdown-menu submenu"' )
  #end
  
  #foreach( $menu in $menus )
    #if ( $menu.name )
      <li class="nav-item dropdown">
        <a class="$navbarLinkCSS nav-link dropdown-toggle" href="#" id="Menu.Dropdown.${menu.name}" role="button" data-bs-toggle="dropdown" aria-expanded="false">$menu.name <b class="caret"></b></a>
        <ul class="dropdown-menu" aria-labelledby="Menu.Dropdown.${menu.name}">
          #foreach( $item in $menu.items )
            #if ( $item.items.size() > 0 )
              <li class="nav-item dropdown-item dropdown-submenu">
                #topLink( $item.href $item.name $item.target "dropdown-item" )
                <ul id="${menu.name}MenuSubMenuDropdown" $subMenuClass>
                  #foreach( $subitem in $item.items )
                    <li class="nav-item dropdown-item">
                      #topLink( $subitem.href $subitem.name $subitem.target "dropdown-item" )
                    </li>
                  #end
                </ul>
              </li>
            #else
              <li class="nav-item dropdown-item" id="${item.name}Dropdown">
                #topLink( $item.href $item.name $item.target "dropdown-item" )
              </li>
            #end
          #end
        </ul>
      </li>
    #end
  #end
#end

########################################################################################################################
##
########################################################################################################################
#macro ( topLink $href $name $target $classes )
  #if( $href )
    #if ( $alignedFileName == $href )
      <a title="$name" class="$classes">$name</a>##
    #else
      #if ( !$decoration.isLink( $href ) )
        #set ( $href = $PathTool.calculateLink( $href, $relativePath ) )
        ##set ( $href = $href.replaceAll( '\\', '/' ) )
        #if ( ( $href == '' ) )
          #set ( $href = './' )
        #end
      #end
      <a href="$href" id="${name}DropdownLink" title="${name}" #if( $target )target="$target"#end class="$classes" >$name</a>##
    #end
  #end
#end

########################################################################################################################
##
########################################################################################################################
#macro ( topLinks $links )
#set ( $counter = 0 )
#foreach( $item in $links )
  #set ( $counter = $counter + 1 )
                   <li>#topLink( $item.href $item.name $item.target )</li>
#end
#end
##